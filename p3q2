/*The absolute distance between two integers x1 and x2 is given by | x2 â€“ x1 |. Write a function which sorts an array x[ ] of n integers in ascending order of their absolute distances with a given number z. For example, given x[ ] = {9, 1, 12, 4, 2} and z = 6, the sorted array will be x[ ] = {4, 9, 2, 1, 12}. Note that 4 is closest to 6, and 12 is farthest from 6, in terms of absolute distances. The function will have the following prototype: void dist_sort( int x[ ], int n, int z ) ;*/
#include <stdio.h>
#include <stdlib.h>

// Function to calculate the absolute difference
int abs_difference(int a, int b) {
    return abs(a - b);
}

// Comparison function for qsort
int compare(const void *a, const void *b) {
    int element1 = *((int*)a);
    int element2 = *((int*)b);
    int diff1 = abs_difference(element1, 6);
    int diff2 = abs_difference(element2, 6);
    return diff1 - diff2;
}

int main() {
    int arr[5] = {9, 1, 12, 4, 2};
    int n = sizeof(arr) / sizeof(arr[0]);

    // Use qsort to sort the array based on absolute differences
    qsort(arr, n, sizeof(int), compare);

    // Print the sorted array
    printf("Sorted Array by Absolute Differences from 6: ");
    for (int i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
